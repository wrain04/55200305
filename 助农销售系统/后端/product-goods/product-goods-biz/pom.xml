<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.xyw</groupId>
        <artifactId>product-goods</artifactId>
        <version>3.6.1</version>
    </parent>

    <artifactId>product-goods-biz</artifactId>
    <packaging>jar</packaging>

    <description>goods 业务模块</description>


    <dependencies>
        <!--必备: 依赖api模块-->
        <dependency>
            <groupId>com.xyw</groupId>
            <artifactId>product-goods-api</artifactId>
            <version>3.6.1</version>
        </dependency>
        <!--选配: orm 模块-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
		<!--umps api模块-->
		<dependency>
			<groupId>com.xyw</groupId>
			<artifactId>product-upms-api</artifactId>
		</dependency>
        <!--必备：安全模块-->
        <dependency>
            <groupId>com.xyw</groupId>
            <artifactId>product-common-security</artifactId>
        </dependency>
        <!--必备：服务处理-->
        <dependency>
            <groupId>com.xyw</groupId>
            <artifactId>product-common-feign</artifactId>
        </dependency>
        <!--必备：日志处理-->
        <dependency>
            <groupId>com.xyw</groupId>
            <artifactId>product-common-log</artifactId>
        </dependency>
        <!--必备：swagger-->
        <dependency>
            <groupId>com.xyw</groupId>
            <artifactId>product-common-swagger</artifactId>
        </dependency>
        <!--必备: 注册中心客户端-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <!--必备: 配置中心客户端-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <!--必备：undertow容器-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
		<!--文件管理-->
		<dependency>
			<groupId>com.pig4cloud.plugin</groupId>
			<artifactId>oss-spring-boot-starter</artifactId>
		</dependency>
		<!--druid连接池-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.9</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.alibaba.compileflow</groupId>-->
<!--			<artifactId>compileflow</artifactId>-->
<!--			<version>1.2.0</version>-->
<!--		</dependency>-->

		<!--thumbnailator 压缩工具-->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>

	</dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
        </plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.xlsx</exclude>
					<exclude>**/*.xls</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.xlsx</include>
					<include>**/*.xls</include>
				</includes>
			</resource>
		</resources>
    </build>

<!--	<build>-->
<!--		<plugins>-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-compiler-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<source>1.8</source>-->
<!--					<target>1.8</target>-->
<!--				</configuration>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<fork>true</fork>-->
<!--					<finalName>${project.build.finalName}</finalName>-->
<!--					&lt;!&ndash;解决windows命令行窗口中文乱码&ndash;&gt;-->
<!--					<jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>-->
<!--					<layout>ZIP</layout>-->
<!--					<includes>-->
<!--						&lt;!&ndash;这里是填写需要包含进去的jar，-->
<!--							必须项目中的某些模块，会经常变动，那么就应该将其坐标写进来-->
<!--							如果没有则non-exists ，表示不打包依赖-->
<!--						&ndash;&gt;-->
<!--						<include>-->
<!--							<groupId>non-exists</groupId>-->
<!--							<artifactId>non-exists</artifactId>-->
<!--						</include>-->
<!--					</includes>-->
<!--				</configuration>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<goals>-->
<!--							<goal>repackage</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
<!--			&lt;!&ndash;此插件用于将依赖包抽出&ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-dependency-plugin</artifactId>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>copy-dependencies</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>copy-dependencies</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<outputDirectory>${project.build.directory}/lib</outputDirectory>-->
<!--							<excludeTransitive>false</excludeTransitive>-->
<!--							<stripVersion>false</stripVersion>-->
<!--							<includeScope>runtime</includeScope>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<artifactId>maven-surefire-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<skip>true</skip>-->
<!--				</configuration>-->
<!--			</plugin>-->
<!--		</plugins>-->
<!--	</build>-->
</project>
